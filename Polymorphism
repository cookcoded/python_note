Sometimes an object comes in many types or forms. but they do share the same logic

To do so, we create an abstract class called document.  This class does not have any implementation 
but defines the structure (in form of functions) that all forms must have.   
If we define the function show()  then both the PdfDocument and WordDocument must have the show() function. Full code:



class Document:
    def __init__(self, name):    
        self.name = name
 
    def show(self):             
        raise NotImplementedError("Subclass must implement abstract method")
 
class Pdf(Document):
    def show(self):
        return 'Show pdf contents!'
 
class Word(Document):
    def show(self):
        return 'Show word contents!'
 
documents = [Pdf('Document1'),
             Pdf('Document2'),
             Word('Document3')]
 
for document in documents:
    print document.name + ': ' + document.show()
